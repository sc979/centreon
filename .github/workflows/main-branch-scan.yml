name: Launch Veracode scans on develop

on:
  push:
    branches: [ develop, master ]

env:
  ZIP_NAME: "${{ github.event.pull_request.base.repo.name }}_${{ github.head_ref || github.ref_name }}"
  BRANCH_NAME: "baseline-develop"
  REPORT_FILENAME: "develop_results.json"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: DEBUG - Check location
        run: ls -la

      - name: DEBUG - Check head ref
        run: echo "${{ github.head_ref }}"

      - name: DEBUG - Check ref name
        run: echo "${{ github.ref_name }}"

      - name: DEBUG - Check run id
        run: echo "${{ github.run_id }}"

      - name: DEBUG - Zip name
        run: echo "${{ env.ZIP_NAME }}"

      - name: Create zip file
        run: zip -r ${{ env.ZIP_NAME }} *

      - name: DEBUG - Check location
        run: ls -la

      - name: Move zip file
        run: mv ${{ env.ZIP_NAME }}.zip poc_build

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ZIP_NAME }}.zip
          path: poc_build/${{ env.ZIP_NAME }}.zip

  policy-scan:
    runs-on: ubuntu-latest
    needs: build
    name: pipeline scan
    steps:
      - uses: actions/checkout@v3
      - name: get archive
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.ZIP_NAME }}.zip

      - name: Veracode Upload and Scan Action Step
        uses: veracode/veracode-uploadandscan-action@master
        id: upload_and_scan
        with:
          app-name: "sc979/centreon"
          createprofile: true
          version: ${{ github.ref_name }}
          filepath: ${{ env.ZIP_NAME }}.zip
          vid: ${{ secrets.VERACODE_API_ID }}
          vkey: ${{ secrets.VERACODE_API_KEY }}
          scantimeout: 30
        continue-on-error: True

  pipeline-scan:
    needs: policy-scan
    runs-on: ubuntu-latest
    container:
      image: veracode/pipeline-scan:latest
      options: --user root
    steps:
      - name: get archive
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.ZIP_NAME }}.zip
          path: /tmp
      - name: pipeline-scan
        run: |
          java -jar /opt/veracode/pipeline-scan.jar \
            -vid "${{secrets.VERACODE_API_ID}}" \
            -vkey "${{secrets.VERACODE_API_KEY}}" \
            --fail_on_severity="Very High, High" \
            --file /tmp/${{ env.ZIP_NAME }}.zip \
            -jf ${{ env.REPORT_FILENAME }} \
            -fjf filtered_${{ env.REPORT_FILENAME }}
        continue-on-error: true

      - name: save standard results
        uses: actions/upload-artifact@v3
        with:
          name: PipelineScanResults
          path: ${{ env.REPORT_FILENAME }}

      - name: save filtered results
        uses: actions/upload-artifact@v3
        with:
          name: filtered-results
          path: filtered_${{ env.REPORT_FILENAME }}

  commit-baseline-file:
    needs: veracode-pipeline-scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: get scan results
        uses: actions/download-artifact@v3
        with:
          name: PipelineScanResults

      - name: DEBUG - Check location
        run: ls -la

      - name: commit baseline file to feature branches
        run: |
          git config --global user.name "${{ secrets.USERNAME }}"
          git config --global user.email "${{ secrets.USERMAIL }}"
          git add "${{ env.REPORT_FILENAME }}" "filtered_${{ env.REPORT_FILENAME }}"
          git stash
          git pull origin ${{ env.BRANCH_NAME }} || echo "Couldn't find remote branch"
          git checkout stash -- .
          git commit -m "Veracode develop's Baseline File push from pipeline"
          git push origin HEAD:${{ env.BRANCH_NAME }} --force-with-lease

#  veracode-sandbox-task:
#    needs: build
#    name: Promote a scan from sandbox
#    runs-on: ubuntu-latest
#    if: ${{ github.ref_name == 'develop' || github.ref_name == 'master' }}
#
#    steps:
#      - name: Promote Scan on Approval
#        env:
#          VERACODE_API_ID: ${{ secrets.VERACODE_API_ID }}
#          VERACODE_API_SECRET: ${{ secrets.VERACODE_API_KEY }}
#        uses: lerer/veracode-sandboxes-helper@v1.0.1
#        with:
#          activity: "promote-latest-scan"
#          app-name: "sc979/centreon"
#          sandbox-name: "${{ github.event.pull_request.base.repo.name }}-${{ github.ref_name }}"
#          delete-on-promote: true # Optional: also Deleting the Sandbox
